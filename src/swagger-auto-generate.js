const swaggerAutogen = require("swagger-autogen")({
  autoHeaders: false,
  autoQuery: false,
  autoBody: false,
});
const path = require("path");

const HOST = process.env.APP_HOST || "localhost",
  PORT = process.env.APP_PORT || 5000;

const doc = {
  info: {
    version: "1.0.0",
    title: "Gateway API",
    description:
      "Documentation automatically generated by the <b>swagger-autogen</b> module.",
  },
  host: `${HOST}:${PORT}`,
  basePath: "/",
  schemes: ["http", "https"],
  consumes: ["application/json"],
  produces: ["application/json"],
  tags: [
    {
      name: "Gateway",
      description: "Endpoints",
    },
    {
      name: "Devices",
      description: "Endpoints",
    },
  ],
  definitions: {
    Gateway: {
      serialNumber: "BD213",
      name: "Example gateway",
      IPV4Address: "192.168.1.1",
      devices: [
        {
          UID: "d121e21ada",
          vendor: "someshop",
          status: "online",
        },
        {
          UID: "dw122w1w12",
          vendor: "someshop",
          status: "offline",
        },
      ],
    },
    AddGateway: {
      $serialNumber: "BD213",
      $name: "Example gateway",
      $IPV4Address: "192.168.1.1",
      devices: [
        {
          $UID: "d121e21ada",
          $vendor: "someshop",
          $status: "online",
        },
      ],
    },
    UpdateGateway: {
      serialNumber: "number update",
      name: "name update",
      IPV4Address: "192.168.1.2",
    },
    AddDevice: {
      $UID: "d121e21ada",
      $vendor: "someshop",
      $status: "online",
    },
  },
};

const outputFile = "./swagger-output.json";
const endpointsFiles = [
  path.resolve("src", "modules", "gateway", "routes.config.js"),
];

swaggerAutogen(outputFile, endpointsFiles, doc).then(({ success }) => {
  if (success) require("./index"); // Your project's root file
});
